// Generated by view binder compiler. Do not edit!
package at.fhooe.mc.datadora.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import android.widget.ToggleButton;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewpager2.widget.ViewPager2;
import at.fhooe.mc.datadora.LinkedList.LinkedListView;
import at.fhooe.mc.datadora.R;
import com.google.android.material.slider.Slider;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLinkedListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout LinkedListActivity;

  @NonNull
  public final ImageView LinkedListActivityBoxReturn;

  @NonNull
  public final TextView LinkedListActivityCurrentValue;

  @NonNull
  public final Guideline LinkedListActivityGuideline;

  @NonNull
  public final RadioButton LinkedListActivityHead;

  @NonNull
  public final RadioButton LinkedListActivityHeadTail;

  @NonNull
  public final Slider LinkedListActivityInputSlider;

  @NonNull
  public final TextView LinkedListActivityInputValue;

  @NonNull
  public final RadioGroup LinkedListActivityRadioGroupType;

  @NonNull
  public final Button LinkedListActivityRandom;

  @NonNull
  public final TextView LinkedListActivityReturnText;

  @NonNull
  public final TextView LinkedListActivityReturnValue;

  @NonNull
  public final ToggleButton LinkedListActivitySwitch;

  @NonNull
  public final TabLayout LinkedListActivityTabLayout;

  @NonNull
  public final RadioButton LinkedListActivityTail;

  @NonNull
  public final Toolbar LinkedListActivityToolbar;

  @NonNull
  public final TextView LinkedListActivityTypeTitle;

  @NonNull
  public final LinkedListView LinkedListActivityView;

  @NonNull
  public final FrameLayout LinkedListActivityViewContainer;

  @NonNull
  public final ViewPager2 LinkedListActivityViewPager;

  private ActivityLinkedListBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout LinkedListActivity, @NonNull ImageView LinkedListActivityBoxReturn,
      @NonNull TextView LinkedListActivityCurrentValue,
      @NonNull Guideline LinkedListActivityGuideline, @NonNull RadioButton LinkedListActivityHead,
      @NonNull RadioButton LinkedListActivityHeadTail,
      @NonNull Slider LinkedListActivityInputSlider, @NonNull TextView LinkedListActivityInputValue,
      @NonNull RadioGroup LinkedListActivityRadioGroupType,
      @NonNull Button LinkedListActivityRandom, @NonNull TextView LinkedListActivityReturnText,
      @NonNull TextView LinkedListActivityReturnValue,
      @NonNull ToggleButton LinkedListActivitySwitch,
      @NonNull TabLayout LinkedListActivityTabLayout, @NonNull RadioButton LinkedListActivityTail,
      @NonNull Toolbar LinkedListActivityToolbar, @NonNull TextView LinkedListActivityTypeTitle,
      @NonNull LinkedListView LinkedListActivityView,
      @NonNull FrameLayout LinkedListActivityViewContainer,
      @NonNull ViewPager2 LinkedListActivityViewPager) {
    this.rootView = rootView;
    this.LinkedListActivity = LinkedListActivity;
    this.LinkedListActivityBoxReturn = LinkedListActivityBoxReturn;
    this.LinkedListActivityCurrentValue = LinkedListActivityCurrentValue;
    this.LinkedListActivityGuideline = LinkedListActivityGuideline;
    this.LinkedListActivityHead = LinkedListActivityHead;
    this.LinkedListActivityHeadTail = LinkedListActivityHeadTail;
    this.LinkedListActivityInputSlider = LinkedListActivityInputSlider;
    this.LinkedListActivityInputValue = LinkedListActivityInputValue;
    this.LinkedListActivityRadioGroupType = LinkedListActivityRadioGroupType;
    this.LinkedListActivityRandom = LinkedListActivityRandom;
    this.LinkedListActivityReturnText = LinkedListActivityReturnText;
    this.LinkedListActivityReturnValue = LinkedListActivityReturnValue;
    this.LinkedListActivitySwitch = LinkedListActivitySwitch;
    this.LinkedListActivityTabLayout = LinkedListActivityTabLayout;
    this.LinkedListActivityTail = LinkedListActivityTail;
    this.LinkedListActivityToolbar = LinkedListActivityToolbar;
    this.LinkedListActivityTypeTitle = LinkedListActivityTypeTitle;
    this.LinkedListActivityView = LinkedListActivityView;
    this.LinkedListActivityViewContainer = LinkedListActivityViewContainer;
    this.LinkedListActivityViewPager = LinkedListActivityViewPager;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLinkedListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLinkedListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_linked_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLinkedListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout LinkedListActivity = (ConstraintLayout) rootView;

      id = R.id.LinkedList_Activity_Box_Return;
      ImageView LinkedListActivityBoxReturn = rootView.findViewById(id);
      if (LinkedListActivityBoxReturn == null) {
        break missingId;
      }

      id = R.id.LinkedList_Activity_CurrentValue;
      TextView LinkedListActivityCurrentValue = rootView.findViewById(id);
      if (LinkedListActivityCurrentValue == null) {
        break missingId;
      }

      id = R.id.LinkedList_Activity_Guideline;
      Guideline LinkedListActivityGuideline = rootView.findViewById(id);
      if (LinkedListActivityGuideline == null) {
        break missingId;
      }

      id = R.id.LinkedList_Activity_Head;
      RadioButton LinkedListActivityHead = rootView.findViewById(id);
      if (LinkedListActivityHead == null) {
        break missingId;
      }

      id = R.id.LinkedList_Activity_Head_Tail;
      RadioButton LinkedListActivityHeadTail = rootView.findViewById(id);
      if (LinkedListActivityHeadTail == null) {
        break missingId;
      }

      id = R.id.LinkedList_Activity_InputSlider;
      Slider LinkedListActivityInputSlider = rootView.findViewById(id);
      if (LinkedListActivityInputSlider == null) {
        break missingId;
      }

      id = R.id.LinkedList_Activity_InputValue;
      TextView LinkedListActivityInputValue = rootView.findViewById(id);
      if (LinkedListActivityInputValue == null) {
        break missingId;
      }

      id = R.id.LinkedList_Activity_RadioGroup_Type;
      RadioGroup LinkedListActivityRadioGroupType = rootView.findViewById(id);
      if (LinkedListActivityRadioGroupType == null) {
        break missingId;
      }

      id = R.id.LinkedList_Activity_Random;
      Button LinkedListActivityRandom = rootView.findViewById(id);
      if (LinkedListActivityRandom == null) {
        break missingId;
      }

      id = R.id.LinkedList_Activity_ReturnText;
      TextView LinkedListActivityReturnText = rootView.findViewById(id);
      if (LinkedListActivityReturnText == null) {
        break missingId;
      }

      id = R.id.LinkedList_Activity_ReturnValue;
      TextView LinkedListActivityReturnValue = rootView.findViewById(id);
      if (LinkedListActivityReturnValue == null) {
        break missingId;
      }

      id = R.id.LinkedList_Activity_Switch;
      ToggleButton LinkedListActivitySwitch = rootView.findViewById(id);
      if (LinkedListActivitySwitch == null) {
        break missingId;
      }

      id = R.id.LinkedList_Activity_TabLayout;
      TabLayout LinkedListActivityTabLayout = rootView.findViewById(id);
      if (LinkedListActivityTabLayout == null) {
        break missingId;
      }

      id = R.id.LinkedList_Activity_Tail;
      RadioButton LinkedListActivityTail = rootView.findViewById(id);
      if (LinkedListActivityTail == null) {
        break missingId;
      }

      id = R.id.LinkedList_Activity_Toolbar;
      Toolbar LinkedListActivityToolbar = rootView.findViewById(id);
      if (LinkedListActivityToolbar == null) {
        break missingId;
      }

      id = R.id.LinkedList_Activity_Type_Title;
      TextView LinkedListActivityTypeTitle = rootView.findViewById(id);
      if (LinkedListActivityTypeTitle == null) {
        break missingId;
      }

      id = R.id.LinkedList_Activity_View;
      LinkedListView LinkedListActivityView = rootView.findViewById(id);
      if (LinkedListActivityView == null) {
        break missingId;
      }

      id = R.id.LinkedList_Activity_ViewContainer;
      FrameLayout LinkedListActivityViewContainer = rootView.findViewById(id);
      if (LinkedListActivityViewContainer == null) {
        break missingId;
      }

      id = R.id.LinkedList_Activity_ViewPager;
      ViewPager2 LinkedListActivityViewPager = rootView.findViewById(id);
      if (LinkedListActivityViewPager == null) {
        break missingId;
      }

      return new ActivityLinkedListBinding((ConstraintLayout) rootView, LinkedListActivity,
          LinkedListActivityBoxReturn, LinkedListActivityCurrentValue, LinkedListActivityGuideline,
          LinkedListActivityHead, LinkedListActivityHeadTail, LinkedListActivityInputSlider,
          LinkedListActivityInputValue, LinkedListActivityRadioGroupType, LinkedListActivityRandom,
          LinkedListActivityReturnText, LinkedListActivityReturnValue, LinkedListActivitySwitch,
          LinkedListActivityTabLayout, LinkedListActivityTail, LinkedListActivityToolbar,
          LinkedListActivityTypeTitle, LinkedListActivityView, LinkedListActivityViewContainer,
          LinkedListActivityViewPager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
